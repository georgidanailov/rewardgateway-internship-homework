{% extends 'base.html.twig' %}

{% block title %}Product Management{% endblock %}

{% block body %}
    <div class="container mt-5">
        <h1 class="text-center my-4">Manage Products</h1>

        <div class="card shadow-sm p-4 mb-4">
            <form id="create-product-form" class="form-group">
                <div class="form-group mb-3">
                    <label for="product-name" class="form-label">Product Name</label>
                    <input type="text" class="form-control" id="product-name" required>
                </div>
                <div class="form-group mb-3">
                    <label for="product-price" class="form-label">Price</label>
                    <input type="number" step="0.01" class="form-control" id="product-price" required>
                </div>
                <div class="form-group mb-3">
                    <label for="product-quantity" class="form-label">Quantity</label>
                    <input type="number" class="form-control" id="product-quantity" required>
                </div>
                <div class="form-group mb-3">
                    <label for="product-description" class="form-label">Description</label>
                    <textarea class="form-control" id="product-description"></textarea>
                </div>
                <div class="form-group mb-3">
                    <label for="product-category" class="form-label">Category</label>
                    <select class="form-control" id="product-category" required>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary btn-block">Add Product</button>
            </form>
        </div>

        <table class="table table-dark table-striped" id="products-table">
            <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Description</th>
                <th>Category</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            {% for product in products %}
                <tr>
                    <td>{{ product.id }}</td>
                    <td>{{ product.name }}</td>
                    <td>{{ product.price }}</td>
                    <td>{{ product.quantity }}</td>
                    <td>{{ product.description ?: 'N/A' }}</td>
                    <td>{{ product.category ? product.category.name : 'N/A' }}</td>
                    <td>
                        <button class="btn btn-warning btn-sm" onclick="editProduct({{ product.id }})">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteProduct({{ product.id }})">Delete</button>
                    </td>
                </tr>
            {% endfor %}
            </tbody>
        </table>

        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                {% for i in 1..totalPages %}
                    <li class="page-item {% if i == currentPage %}active{% endif %}">
                        <a class="page-link" href="{{ path('product_index', { page: i }) }}">{{ i }}</a>
                    </li>
                {% endfor %}
            </ul>
        </nav>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            fetchCategories();

            function fetchCategories() {
                fetch('/api/categories')
                    .then(response => response.json())
                    .then(data => {
                        const categorySelect = document.getElementById('product-category');
                        categorySelect.innerHTML = '';

                        data.forEach(category => {
                            const option = document.createElement('option');
                            option.value = category.id;
                            option.textContent = category.name;
                            categorySelect.appendChild(option);
                        });
                    })
                    .catch(error => console.error('Error fetching categories:', error));
            }

            document.getElementById('create-product-form').addEventListener('submit', function (event) {
                event.preventDefault();

                const name = document.getElementById('product-name').value;
                const price = document.getElementById('product-price').value;
                const quantity = document.getElementById('product-quantity').value;
                const description = document.getElementById('product-description').value;
                const categoryId = document.getElementById('product-category').value;

                fetch('/api/products', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({name, price, quantity, description, category_id: categoryId}),
                })
                    .then(response => response.json())
                    .then(data => {
                        alert('Product created successfully!');
                        location.reload();
                    })
                    .catch(error => console.error('Error creating product:', error));
            });

            window.deleteProduct = function (id) {
                if (confirm('Are you sure you want to delete this product?')) {
                    fetch(`/api/products/${id}`, {
                        method: 'DELETE',
                    })
                        .then(response => response.json())
                        .then(data => {
                            alert('Product deleted successfully!');
                            location.reload();
                        })
                        .catch(error => console.error('Error deleting product:', error));
                }
            };

            window.editProduct = function (id) {
                const newName = prompt('Enter the new product name:');
                const newPrice = prompt('Enter the new product price:');
                const newQuantity = prompt('Enter the new product quantity:');
                const newDescription = prompt('Enter the new product description:');
                const newCategoryId = prompt('Enter the new category ID:');

                if (newName && newPrice && newQuantity && newCategoryId) {
                    fetch(`/api/products/${id}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            name: newName,
                            price: newPrice,
                            quantity: newQuantity,
                            description: newDescription,
                            category_id: newCategoryId
                        }),
                    })
                        .then(response => response.json())
                        .then(data => {
                            alert('Product updated successfully!');
                            location.reload();
                        })
                        .catch(error => console.error('Error updating product:', error));
                }
            };
        });
    </script>
{% endblock %}
