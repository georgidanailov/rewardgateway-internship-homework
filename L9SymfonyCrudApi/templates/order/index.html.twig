{% extends 'base.html.twig' %}

{% block title %}Order Management{% endblock %}

{% block body %}
    <div class="container mt-5">
        <h1 class="text-center my-4">Manage Orders</h1>

        <div class="card shadow-sm p-4 mb-4">
            <form id="create-order-form" class="form-group">
                <div class="form-group mb-3">
                    <label for="order-date" class="form-label">Order Date</label>
                    <input type="date" class="form-control" id="order-date" required>
                </div>
                <div class="form-group mb-3">
                    <label for="order-total" class="form-label">Total</label>
                    <input type="number" step="0.01" class="form-control" id="order-total" required>
                </div>
                <div class="form-group mb-3">
                    <label for="order-status" class="form-label">Status</label>
                    <select class="form-control" id="order-status" required>
                        <option value="Pending">Pending</option>
                        <option value="Completed">Completed</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>
                </div>
                <div class="form-group mb-3">
                    <label for="order-customer-id" class="form-label">Customer ID</label>
                    <input type="number" class="form-control" id="order-customer-id" required>
                </div>
                <button type="submit" class="btn btn-primary btn-block">Add Order</button>
            </form>
        </div>

        <table class="table table-dark table-striped" id="orders-table">
            <thead>
            <tr>
                <th>ID</th>
                <th>Order Date</th>
                <th>Total</th>
                <th>Status</th>
                <th>Customer</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            {% for order in orders %}
                <tr>
                    <td>{{ order.id }}</td>
                    <td>{{ order.orderDate|date('Y-m-d') }}</td>
                    <td>{{ order.total }}</td>
                    <td>{{ order.status.value }}</td>
                    <td>{{ order.customer ? order.customer.id : 'N/A' }}</td>
                    <td>
                        <button class="btn btn-warning btn-sm" onclick="editOrder({{ order.id }})">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteOrder({{ order.id }})">Delete</button>
                    </td>
                </tr>
            {% endfor %}
            </tbody>
        </table>

        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                {% for i in 1..totalPages %}
                    <li class="page-item {% if i == currentPage %}active{% endif %}">
                        <a class="page-link" href="{{ path('order_index', { page: i }) }}">{{ i }}</a>
                    </li>
                {% endfor %}
            </ul>
        </nav>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById('create-order-form').addEventListener('submit', function (event) {
                event.preventDefault();

                const orderDate = document.getElementById('order-date').value;
                const total = document.getElementById('order-total').value;
                const status = document.getElementById('order-status').value;
                const customerId = document.getElementById('order-customer-id').value;

                fetch('/api/orders', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({order_date: orderDate, total, status, customer_id: customerId}),
                })
                    .then(response => response.json())
                    .then(data => {
                        alert('Order created successfully!');
                        location.reload();
                    })
                    .catch(error => console.error('Error creating order:', error));
            });

            window.deleteOrder = function (id) {
                if (confirm('Are you sure you want to delete this order?')) {
                    fetch(`/api/orders/${id}`, {
                        method: 'DELETE',
                    })
                        .then(response => response.json())
                        .then(data => {
                            alert('Order deleted successfully!');
                            location.reload();
                        })
                        .catch(error => console.error('Error deleting order:', error));
                }
            };

            window.editOrder = function (id) {
                const newOrderDate = prompt('Enter the new order date (YYYY-MM-DD):');
                const newTotal = prompt('Enter the new total:');
                const newStatus = prompt('Enter the new status (Pending, Completed, Cancelled):');
                const newCustomerId = prompt('Enter the new customer ID:');

                if (newOrderDate && newTotal && newStatus && newCustomerId) {
                    fetch(`/api/orders/${id}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            order_date: newOrderDate,
                            total: newTotal,
                            status: newStatus,
                            customer_id: newCustomerId
                        }),
                    })
                        .then(response => response.json())
                        .then(data => {
                            alert('Order updated successfully!');
                            location.reload();
                        })
                        .catch(error => console.error('Error updating order:', error));
                }
            };
        });
    </script>
{% endblock %}
